-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s is
port (
    ap_ready : OUT STD_LOGIC;
    data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_5_val : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv26_3FFFDAE : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110110101110";
    constant ap_const_lv26_262 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001001100010";
    constant ap_const_lv26_3FFFDD2 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110111010010";
    constant ap_const_lv26_223 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000100011";
    constant ap_const_lv26_261 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001001100001";
    constant ap_const_lv26_215 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000010101";
    constant ap_const_lv26_3FFFE0C : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111000001100";
    constant ap_const_lv26_3FFFDF1 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110111110001";
    constant ap_const_lv26_251 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001001010001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv16_FFF9 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111001";
    constant ap_const_lv16_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_const_lv16_FFF1 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111110001";
    constant ap_const_lv16_A : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001010";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal mul_ln42_17_fu_108_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln73_4_fu_907_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln42_17_fu_108_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln42_13_fu_109_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln73_fu_779_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln42_13_fu_109_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln42_15_fu_114_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln42_fu_115_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln42_18_fu_117_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln42_18_fu_117_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln42_14_fu_119_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln42_14_fu_119_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln73_fu_120_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln42_12_fu_122_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln42_12_fu_122_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln42_16_fu_123_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln42_fu_115_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln42_12_fu_122_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln42_13_fu_109_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln42_14_fu_119_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln_fu_821_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_821_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln73_2_fu_829_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln73_1_fu_839_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln73_1_fu_839_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln73_fu_833_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln73_3_fu_847_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sub_ln73_1_fu_851_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln73_fu_120_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln42_15_fu_114_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln42_16_fu_123_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln42_17_fu_108_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln42_18_fu_117_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln42_15_fu_796_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_18_fu_867_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_s_fu_786_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_20_fu_897_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_22_fu_923_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_17_fu_951_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_17_fu_857_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln_fu_769_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_21_fu_913_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_16_fu_806_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_19_fu_882_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_20_fu_969_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_19_fu_963_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_18_fu_957_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_15_fu_939_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_16_fu_945_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_fu_933_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_21_fu_975_p2 : STD_LOGIC_VECTOR (15 downto 0);

    component myproject_mul_16s_11s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_16s_11ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_16s_10s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;



begin
    mul_16s_11s_26_1_1_U26 : component myproject_mul_16s_11s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln42_17_fu_108_p0,
        din1 => mul_ln42_17_fu_108_p1,
        dout => mul_ln42_17_fu_108_p2);

    mul_16s_11ns_26_1_1_U27 : component myproject_mul_16s_11ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln42_13_fu_109_p0,
        din1 => mul_ln42_13_fu_109_p1,
        dout => mul_ln42_13_fu_109_p2);

    mul_16s_11s_26_1_1_U28 : component myproject_mul_16s_11s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => data_3_val,
        din1 => mul_ln42_15_fu_114_p1,
        dout => mul_ln42_15_fu_114_p2);

    mul_16s_11ns_26_1_1_U29 : component myproject_mul_16s_11ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => data_0_val,
        din1 => mul_ln42_fu_115_p1,
        dout => mul_ln42_fu_115_p2);

    mul_16s_11ns_26_1_1_U30 : component myproject_mul_16s_11ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln42_18_fu_117_p0,
        din1 => mul_ln42_18_fu_117_p1,
        dout => mul_ln42_18_fu_117_p2);

    mul_16s_11ns_26_1_1_U31 : component myproject_mul_16s_11ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln42_14_fu_119_p0,
        din1 => mul_ln42_14_fu_119_p1,
        dout => mul_ln42_14_fu_119_p2);

    mul_16s_10s_26_1_1_U32 : component myproject_mul_16s_10s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 10,
        dout_WIDTH => 26)
    port map (
        din0 => data_2_val,
        din1 => mul_ln73_fu_120_p1,
        dout => mul_ln73_fu_120_p2);

    mul_16s_11s_26_1_1_U33 : component myproject_mul_16s_11s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln42_12_fu_122_p0,
        din1 => mul_ln42_12_fu_122_p1,
        dout => mul_ln42_12_fu_122_p2);

    mul_16s_11ns_26_1_1_U34 : component myproject_mul_16s_11ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => data_4_val,
        din1 => mul_ln42_16_fu_123_p1,
        dout => mul_ln42_16_fu_123_p2);




    add_ln58_15_fu_939_p2 <= std_logic_vector(unsigned(trunc_ln42_18_fu_867_p4) + unsigned(trunc_ln42_s_fu_786_p4));
    add_ln58_16_fu_945_p2 <= std_logic_vector(unsigned(trunc_ln42_20_fu_897_p4) + unsigned(ap_const_lv16_8));
    add_ln58_17_fu_951_p2 <= std_logic_vector(unsigned(trunc_ln42_22_fu_923_p4) + unsigned(ap_const_lv16_FFF1));
    add_ln58_18_fu_957_p2 <= std_logic_vector(unsigned(add_ln58_17_fu_951_p2) + unsigned(trunc_ln42_17_fu_857_p4));
    add_ln58_19_fu_963_p2 <= std_logic_vector(unsigned(trunc_ln_fu_769_p4) + unsigned(trunc_ln42_21_fu_913_p4));
    add_ln58_20_fu_969_p2 <= std_logic_vector(unsigned(trunc_ln42_16_fu_806_p4) + unsigned(trunc_ln42_19_fu_882_p4));
    add_ln58_21_fu_975_p2 <= std_logic_vector(unsigned(add_ln58_20_fu_969_p2) + unsigned(ap_const_lv16_A));
    add_ln58_fu_933_p2 <= std_logic_vector(unsigned(trunc_ln42_15_fu_796_p4) + unsigned(ap_const_lv16_FFF9));
    ap_ready <= ap_const_logic_1;
    ap_return_0 <= add_ln58_19_fu_963_p2;
    ap_return_1 <= add_ln58_18_fu_957_p2;
    ap_return_2 <= add_ln58_15_fu_939_p2;
    ap_return_3 <= add_ln58_16_fu_945_p2;
    ap_return_4 <= add_ln58_fu_933_p2;
    ap_return_5 <= add_ln58_21_fu_975_p2;
    mul_ln42_12_fu_122_p0 <= sext_ln73_fu_779_p1(16 - 1 downto 0);
    mul_ln42_12_fu_122_p1 <= ap_const_lv26_3FFFDF1(11 - 1 downto 0);
    mul_ln42_13_fu_109_p0 <= sext_ln73_fu_779_p1(16 - 1 downto 0);
    mul_ln42_13_fu_109_p1 <= ap_const_lv26_262(11 - 1 downto 0);
    mul_ln42_14_fu_119_p0 <= sext_ln73_fu_779_p1(16 - 1 downto 0);
    mul_ln42_14_fu_119_p1 <= ap_const_lv26_215(11 - 1 downto 0);
    mul_ln42_15_fu_114_p1 <= ap_const_lv26_3FFFDD2(11 - 1 downto 0);
    mul_ln42_16_fu_123_p1 <= ap_const_lv26_251(11 - 1 downto 0);
    mul_ln42_17_fu_108_p0 <= sext_ln73_4_fu_907_p1(16 - 1 downto 0);
    mul_ln42_17_fu_108_p1 <= ap_const_lv26_3FFFDAE(11 - 1 downto 0);
    mul_ln42_18_fu_117_p0 <= sext_ln73_4_fu_907_p1(16 - 1 downto 0);
    mul_ln42_18_fu_117_p1 <= ap_const_lv26_261(11 - 1 downto 0);
    mul_ln42_fu_115_p1 <= ap_const_lv26_223(11 - 1 downto 0);
    mul_ln73_fu_120_p1 <= ap_const_lv26_3FFFE0C(10 - 1 downto 0);
        sext_ln73_2_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_821_p3),26));

        sext_ln73_3_fu_847_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln73_1_fu_839_p3),26));

        sext_ln73_4_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_5_val),26));

        sext_ln73_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_1_val),26));

    shl_ln73_1_fu_839_p1 <= data_2_val;
    shl_ln73_1_fu_839_p3 <= (shl_ln73_1_fu_839_p1 & ap_const_lv5_0);
    shl_ln_fu_821_p1 <= data_2_val;
    shl_ln_fu_821_p3 <= (shl_ln_fu_821_p1 & ap_const_lv9_0);
    sub_ln73_1_fu_851_p2 <= std_logic_vector(unsigned(sub_ln73_fu_833_p2) - unsigned(sext_ln73_3_fu_847_p1));
    sub_ln73_fu_833_p2 <= std_logic_vector(unsigned(ap_const_lv26_0) - unsigned(sext_ln73_2_fu_829_p1));
    trunc_ln42_15_fu_796_p4 <= mul_ln42_13_fu_109_p2(25 downto 10);
    trunc_ln42_16_fu_806_p4 <= mul_ln42_14_fu_119_p2(25 downto 10);
    trunc_ln42_17_fu_857_p4 <= sub_ln73_1_fu_851_p2(25 downto 10);
    trunc_ln42_18_fu_867_p4 <= mul_ln73_fu_120_p2(25 downto 10);
    trunc_ln42_19_fu_882_p4 <= mul_ln42_15_fu_114_p2(25 downto 10);
    trunc_ln42_20_fu_897_p4 <= mul_ln42_16_fu_123_p2(25 downto 10);
    trunc_ln42_21_fu_913_p4 <= mul_ln42_17_fu_108_p2(25 downto 10);
    trunc_ln42_22_fu_923_p4 <= mul_ln42_18_fu_117_p2(25 downto 10);
    trunc_ln42_s_fu_786_p4 <= mul_ln42_12_fu_122_p2(25 downto 10);
    trunc_ln_fu_769_p4 <= mul_ln42_fu_115_p2(25 downto 10);
end behav;
