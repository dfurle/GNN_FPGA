-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s is
port (
    ap_ready : OUT STD_LOGIC;
    data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_5_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_7_val : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv26_3FFFD96 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110110010110";
    constant ap_const_lv26_227 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000100111";
    constant ap_const_lv26_205 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000000101";
    constant ap_const_lv26_3FFFE2D : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111000101101";
    constant ap_const_lv26_1D3 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000111010011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv16_F : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001111";
    constant ap_const_lv16_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010001";
    constant ap_const_lv16_FFF8 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111000";
    constant ap_const_lv16_FFF7 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111110111";
    constant ap_const_lv16_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000111";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal mul_ln42_20_fu_81_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln42_19_fu_86_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln70_fu_452_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln42_19_fu_86_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln42_fu_89_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln42_fu_89_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln73_4_fu_91_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln73_fu_93_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln73_fu_93_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln70_fu_452_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln73_fu_93_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln_fu_469_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_469_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln73_fu_477_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln73_2_fu_487_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln73_2_fu_487_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln73_fu_481_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln73_5_fu_495_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sub_ln73_2_fu_499_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln42_fu_89_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln42_19_fu_86_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln73_4_fu_91_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln42_20_fu_81_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln_fu_459_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_s_fu_505_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_23_fu_515_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_24_fu_525_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_25_fu_540_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln42_26_fu_555_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_fu_565_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_22_fu_571_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_23_fu_577_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_24_fu_583_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_25_fu_589_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln58_26_fu_595_p2 : STD_LOGIC_VECTOR (15 downto 0);

    component myproject_mul_16s_11s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_16s_11ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_16s_10s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_16s_10ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;



begin
    mul_16s_11s_26_1_1_U10 : component myproject_mul_16s_11s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => data_7_val,
        din1 => mul_ln42_20_fu_81_p1,
        dout => mul_ln42_20_fu_81_p2);

    mul_16s_11ns_26_1_1_U11 : component myproject_mul_16s_11ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln42_19_fu_86_p0,
        din1 => mul_ln42_19_fu_86_p1,
        dout => mul_ln42_19_fu_86_p2);

    mul_16s_11ns_26_1_1_U12 : component myproject_mul_16s_11ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln42_fu_89_p0,
        din1 => mul_ln42_fu_89_p1,
        dout => mul_ln42_fu_89_p2);

    mul_16s_10s_26_1_1_U13 : component myproject_mul_16s_10s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 10,
        dout_WIDTH => 26)
    port map (
        din0 => data_5_val,
        din1 => mul_ln73_4_fu_91_p1,
        dout => mul_ln73_4_fu_91_p2);

    mul_16s_10ns_26_1_1_U14 : component myproject_mul_16s_10ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 10,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln73_fu_93_p0,
        din1 => mul_ln73_fu_93_p1,
        dout => mul_ln73_fu_93_p2);




    add_ln58_22_fu_571_p2 <= std_logic_vector(unsigned(trunc_ln42_s_fu_505_p4) + unsigned(ap_const_lv16_F));
    add_ln58_23_fu_577_p2 <= std_logic_vector(unsigned(trunc_ln42_23_fu_515_p4) + unsigned(ap_const_lv16_11));
    add_ln58_24_fu_583_p2 <= std_logic_vector(unsigned(trunc_ln42_24_fu_525_p4) + unsigned(ap_const_lv16_FFF8));
    add_ln58_25_fu_589_p2 <= std_logic_vector(unsigned(trunc_ln42_25_fu_540_p4) + unsigned(ap_const_lv16_FFF7));
    add_ln58_26_fu_595_p2 <= std_logic_vector(unsigned(trunc_ln42_26_fu_555_p4) + unsigned(ap_const_lv16_7));
    add_ln58_fu_565_p2 <= std_logic_vector(unsigned(trunc_ln_fu_459_p4) + unsigned(ap_const_lv16_FFFF));
    ap_ready <= ap_const_logic_1;
    ap_return_0 <= add_ln58_fu_565_p2;
    ap_return_1 <= add_ln58_22_fu_571_p2;
    ap_return_2 <= add_ln58_23_fu_577_p2;
    ap_return_3 <= add_ln58_24_fu_583_p2;
    ap_return_4 <= add_ln58_25_fu_589_p2;
    ap_return_5 <= add_ln58_26_fu_595_p2;
    mul_ln42_19_fu_86_p0 <= sext_ln70_fu_452_p1(16 - 1 downto 0);
    mul_ln42_19_fu_86_p1 <= ap_const_lv26_227(11 - 1 downto 0);
    mul_ln42_20_fu_81_p1 <= ap_const_lv26_3FFFD96(11 - 1 downto 0);
    mul_ln42_fu_89_p0 <= sext_ln70_fu_452_p1(16 - 1 downto 0);
    mul_ln42_fu_89_p1 <= ap_const_lv26_205(11 - 1 downto 0);
    mul_ln73_4_fu_91_p1 <= ap_const_lv26_3FFFE2D(10 - 1 downto 0);
    mul_ln73_fu_93_p0 <= sext_ln70_fu_452_p1(16 - 1 downto 0);
    mul_ln73_fu_93_p1 <= ap_const_lv26_1D3(10 - 1 downto 0);
    sext_ln70_fu_452_p0 <= data_4_val;
        sext_ln70_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln70_fu_452_p0),26));

        sext_ln73_5_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln73_2_fu_487_p3),26));

        sext_ln73_fu_477_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_469_p3),26));

    shl_ln73_2_fu_487_p1 <= data_4_val;
    shl_ln73_2_fu_487_p3 <= (shl_ln73_2_fu_487_p1 & ap_const_lv5_0);
    shl_ln_fu_469_p1 <= data_4_val;
    shl_ln_fu_469_p3 <= (shl_ln_fu_469_p1 & ap_const_lv9_0);
    sub_ln73_2_fu_499_p2 <= std_logic_vector(unsigned(sub_ln73_fu_481_p2) - unsigned(sext_ln73_5_fu_495_p1));
    sub_ln73_fu_481_p2 <= std_logic_vector(unsigned(ap_const_lv26_0) - unsigned(sext_ln73_fu_477_p1));
    trunc_ln42_23_fu_515_p4 <= mul_ln42_fu_89_p2(25 downto 10);
    trunc_ln42_24_fu_525_p4 <= mul_ln42_19_fu_86_p2(25 downto 10);
    trunc_ln42_25_fu_540_p4 <= mul_ln73_4_fu_91_p2(25 downto 10);
    trunc_ln42_26_fu_555_p4 <= mul_ln42_20_fu_81_p2(25 downto 10);
    trunc_ln42_s_fu_505_p4 <= sub_ln73_2_fu_499_p2(25 downto 10);
    trunc_ln_fu_459_p4 <= mul_ln73_fu_93_p2(25 downto 10);
end behav;
